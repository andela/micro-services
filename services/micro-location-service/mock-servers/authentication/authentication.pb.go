// Code generated by protoc-gen-go.
// source: authentication/authentication.proto
// DO NOT EDIT!

/*
Package authentication is a generated protocol buffer package.

It is generated from these files:
	authentication/authentication.proto

It has these top-level messages:
	User
	Role
	Permission
	Token
*/
package authentication

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	FirstName   string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	AccessToken string `protobuf:"bytes,6,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Picture     string `protobuf:"bytes,7,opt,name=picture" json:"picture,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Role struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Permission struct {
	Id     int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	RoleId int32  `protobuf:"varint,4,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Token struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*User)(nil), "authentication.User")
	proto.RegisterType((*Role)(nil), "authentication.Role")
	proto.RegisterType((*Permission)(nil), "authentication.Permission")
	proto.RegisterType((*Token)(nil), "authentication.Token")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Micro service

type MicroClient interface {
	GenerateToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error)
	ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*User, error)
}

type microClient struct {
	cc *grpc.ClientConn
}

func NewMicroClient(cc *grpc.ClientConn) MicroClient {
	return &microClient{cc}
}

func (c *microClient) GenerateToken(ctx context.Context, in *User, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := grpc.Invoke(ctx, "/authentication.micro/GenerateToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *microClient) ValidateToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/authentication.micro/ValidateToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Micro service

type MicroServer interface {
	GenerateToken(context.Context, *User) (*Token, error)
	ValidateToken(context.Context, *Token) (*User, error)
}

func RegisterMicroServer(s *grpc.Server, srv MicroServer) {
	s.RegisterService(&_Micro_serviceDesc, srv)
}

func _Micro_GenerateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MicroServer).GenerateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.micro/GenerateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MicroServer).GenerateToken(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Micro_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MicroServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.micro/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MicroServer).ValidateToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

var _Micro_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authentication.micro",
	HandlerType: (*MicroServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateToken",
			Handler:    _Micro_GenerateToken_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _Micro_ValidateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("authentication/authentication.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xb1, 0x4e, 0xfb, 0x30,
	0x10, 0xc6, 0x9b, 0x36, 0x69, 0xff, 0xb9, 0x3f, 0x54, 0xc8, 0x02, 0x61, 0x15, 0x55, 0x02, 0xb3,
	0x20, 0x86, 0x22, 0xc1, 0xce, 0x8a, 0x58, 0x10, 0x8a, 0x80, 0x85, 0x21, 0x32, 0xc9, 0x21, 0xac,
	0x26, 0x71, 0x65, 0xbb, 0x03, 0x4f, 0xc0, 0x33, 0xf1, 0x76, 0xd8, 0x97, 0x06, 0xd4, 0xd2, 0x81,
	0xed, 0xbe, 0xdf, 0xe7, 0x2f, 0xe7, 0xf3, 0x05, 0x4e, 0xe5, 0xd2, 0xbd, 0x61, 0xe3, 0x54, 0x21,
	0x9d, 0xd2, 0xcd, 0xc5, 0xba, 0x9c, 0x2d, 0x8c, 0x76, 0x9a, 0x8d, 0xd7, 0xa9, 0xf8, 0x8c, 0x20,
	0x7e, 0xb4, 0x68, 0xd8, 0x18, 0xfa, 0xaa, 0xe4, 0xd1, 0x71, 0x74, 0x96, 0x64, 0xbe, 0x62, 0xfb,
	0x90, 0x60, 0x2d, 0x55, 0xc5, 0xfb, 0x1e, 0xa5, 0x59, 0x2b, 0xd8, 0x14, 0xe0, 0x55, 0x19, 0xeb,
	0xf2, 0x46, 0xd6, 0xc8, 0x07, 0x64, 0xa5, 0x44, 0xee, 0x3c, 0x60, 0x47, 0x90, 0x56, 0xb2, 0x73,
	0x63, 0x72, 0xff, 0x05, 0x40, 0x26, 0x83, 0x98, 0x78, 0x42, 0x9c, 0x6a, 0x76, 0x02, 0x3b, 0xb2,
	0x28, 0xd0, 0xda, 0xdc, 0xe9, 0x39, 0x36, 0x7c, 0x48, 0xde, 0xff, 0x96, 0x3d, 0x04, 0xc4, 0x38,
	0x8c, 0x16, 0xaa, 0x70, 0x4b, 0x83, 0x7c, 0x44, 0x6e, 0x27, 0xc5, 0x39, 0xc4, 0x99, 0xae, 0xf0,
	0xd7, 0xd5, 0xbb, 0x46, 0xfd, 0x9f, 0x46, 0xe2, 0x19, 0xe0, 0x1e, 0x4d, 0xad, 0xac, 0xf5, 0x53,
	0xff, 0x25, 0xc1, 0xf6, 0x60, 0x30, 0xc7, 0xf7, 0xd5, 0x8c, 0xa1, 0x64, 0x87, 0x30, 0x32, 0xbe,
	0x5f, 0xee, 0xa3, 0x31, 0x45, 0x87, 0x41, 0xde, 0x96, 0x62, 0x0a, 0x49, 0x7b, 0x57, 0xff, 0x68,
	0xed, 0x1c, 0x51, 0xfb, 0x68, 0x24, 0x2e, 0x3f, 0x22, 0x48, 0x6a, 0x55, 0x18, 0xcd, 0xae, 0x61,
	0xf7, 0x06, 0x1b, 0x34, 0xd2, 0xe1, 0x2a, 0x30, 0xdb, 0xd8, 0x52, 0xd8, 0xc5, 0xe4, 0x60, 0x93,
	0xd2, 0x61, 0xd1, 0x0b, 0xf9, 0x27, 0x59, 0xa9, 0xf2, 0x3b, 0xbf, 0xfd, 0xe4, 0x64, 0xeb, 0x67,
	0x45, 0xef, 0x65, 0x48, 0x3f, 0xc1, 0xd5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x0c, 0x89,
	0xf2, 0x2b, 0x02, 0x00, 0x00,
}
